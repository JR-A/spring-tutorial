<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 자동설정 -->
	
	<!-- byName : 프로퍼티 이름을 이용한 의존 관계 자동 설정. (권장)
		 		  bean의 이름과 프로퍼티명이 같으면 자동으로 의존관계 설정 -->
	<bean name="writeArticleService" class="kr.spring.ch13.WriteArticleService" autowire="byName"/>
	<bean name="writeArticleDAO" class="kr.spring.ch13.WriteArticleDAO"/>
	
	<!-- byType : 프로퍼티의 타입을 이용한 의존 관계 자동 설정.
				  bean의 타입과 프로퍼티 타입이 같으면 자동으로 의존관계 설정 -->	
	<bean name="systemMonitor" class="kr.spring.ch14.SystemMonitor" autowire="byType"/>
	<bean name="phoneCall" class="kr.spring.ch14.PhoneCall"/>
	<!-- 동일한 타입의 객체가 존재할 경우 오류 발생. 컨테이너에 어떤 객체를 넣어야할 지 모호
		 expected single matching bean but found 2 -->
<!-- 	<bean name="phoneCall2" class="kr.spring.ch14.PhoneCall"/> -->
	
	
	<!-- 빈 객체 범위 설정 : 서로 다른 범위 빈에 대한 의존 처리 -->
	<!-- scope 설정 하지않으면 기본적으로 singleton -->
	<!-- singleton : 스프링 컨테이너에 한 개의 빈 객체만 존재. 호출 여러 번 해도 동일한 빈 객체 호출됨 -->
	<bean id="executor" class="kr.spring.ch15.Executor">
		<property name="worker" ref="workerBean"/>
	</bean>
	<!-- prototype : 빈을 호출할 때마다 객체 생성. aop옵션 추가해야 버그 없이 적용됨 -->
	<bean id="workerBean" class="kr.spring.ch15.Worker" scope="prototype">
		<!-- 위 Executor클래스는 전달받은 Worker객체가 prototype범위의 빈 객체임에도 불구하고
		매번 새로운 Worker객체를 사용하는 것이 아니라 한 개의 Worker객체만 사용하게 됨
		따라서 prototype범위의  빈 객체가 singleton범위의 빈 객체로부터 참조될 때
		<aop:scoped-proxy/>태그를 이용하면 올바르게 범위를 적용 -->
		<aop:scoped-proxy/>
	</bean>
	
	
	
</beans>
