<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- popup창 호출시처럼 tiles를 이용하지 않고 JSP를 단독호출해야 하는 경우 사용하는 resover -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>	<!-- 우선순위 2번! jsp호출하는 resolver - 단독페이지 호출시 사용 -->
	</beans:bean>
	
	<!-- @Controller 오토스캔 -->
	<context:component-scan base-package="kr.spring.main.controller"/>
	<!-- @Controller 오토스캔 -->
	<context:component-scan base-package="kr.spring.member.controller" />
	
	<!-- Tiles 설정파일(main.xml, member.xml) 등록 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles-def/main.xml</beans:value>	<!-- 첫 화면 설정 -->
				<beans:value>/WEB-INF/tiles-def/member.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Tiles 이용할 때 사용하는 view resolver(우리가 생성) -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<beans:property name="order" value="1"/>	<!-- 우선순위 1번! -->
	</beans:bean>
	
	<!-- 파일 다운로드시 사용하는 view resolver(우리가 생성) -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>  <!-- 우선순위 0번 -->
	
	<!-- 파일 업로드시 사용하는 view resolver(우리가 생성) - mulipartResolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="52428800"/> <!-- 50MB -->
		<beans:property name="defaultEncoding" value="UTF-8"/>
	</beans:bean>
	
	<!-- ============== 리소스 번들 지정, 등록(메시지 처리-로그인, 게시판 유효성체크) =============== -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list><!-- 폴더.파일명(확장자는 무조건 properties이므로 생략) -->
				<beans:value>messages.validation</beans:value>	<!-- 오류메시지 -->
			</beans:list>
		</beans:property>
	</beans:bean>

</beans:beans>
